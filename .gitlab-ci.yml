# Build using the node8build image
image: jfrog.theirweb.net:5000/node8build:latest

# Cache the node_modules/ folder between builds, as well as "untracked by Git" (build output) files
cache:
  untracked: true
  key: "$CI_BUILD_REF_NAME"
  paths:
    - node_modules/
    - dist/
    - coverage/
    - public/

# May be helpful for debugging.
before_script:
  - env | grep ^PATH
  - env | grep ^CI_

stages:
  - build
  - test
  - publish
  - pages

# Get the modules installed
build:
  stage: build
  script:
    - npm install
  tags:
    - node8

# We need to test both the test suite and any DB migrations included.
test:
  stage: test
  script:
    - npm run lint
    - npm test
  coverage: /^Statements\s*:\s*([^%]+)/
  tags:
    - node8

# This step only runs on a merge to the upstream repo's master branch
publish:
  stage: publish
  script:
    # npm prune --production fails with NPM 5.3.x in Docker containers
    - rm -rf node_modules
    - NODE_ENV=production npm install
    - npm run bump
    - npm publish
  tags:
    - node8
  only:
    - master@webng/vue-firebase-data

pages:
  stage: pages
  script:
    - rm -rf node_modules
    - npm install
    - npm run docs
    - rm -rf public/coverage
    - mkdir -p public
    - mv coverage/ public/
    - npm run notify
  artifacts:
    paths:
      - public
  tags:
    - node8
  only:
    - master@webng/vue-firebase-data
